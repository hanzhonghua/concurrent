volatile作用
可见性，禁止指令重排序

    说到volatile的作用，还是要说下java内存模型.根目录下的readme文件介绍了【原子性】，【可见性】，【顺序性】这三个并发问题
归根到底，可见性是因为缓存，而顺序性是因为编译器优化，那么如果解决这两个问题，就是禁用缓存和编译器优化，但是这样一来，我们
的程序效率就降低了。那么有没有什么办法可以既解决问题有保证效率呢？答案是有的，就是按需禁用。也就是所谓的【Java内存模型】
    就是说Java内存模型规范了按需禁用缓存和编译优化的方法 - volatile，synchronized，final，与Happens-Before原则，简单说
Java内存模型就是规范了访问变量的原则

